[{"/media/rafael/Hard Disk2/workspace/clonenetflix/src/index.js":"1","/media/rafael/Hard Disk2/workspace/clonenetflix/src/App.js":"2","/media/rafael/Hard Disk2/workspace/clonenetflix/src/Tmdb.js":"3","/media/rafael/Hard Disk2/workspace/clonenetflix/src/components/MovieRow.js":"4","/media/rafael/Hard Disk2/workspace/clonenetflix/src/components/FeaturedMovie.js":"5","/media/rafael/Hard Disk2/workspace/clonenetflix/src/components/Header/index.js":"6"},{"size":198,"mtime":1619279847080,"results":"7","hashOfConfig":"8"},{"size":2169,"mtime":1619741462661,"results":"9","hashOfConfig":"8"},{"size":2381,"mtime":1619388504883,"results":"10","hashOfConfig":"8"},{"size":1484,"mtime":1619556020691,"results":"11","hashOfConfig":"8"},{"size":1503,"mtime":1619742240414,"results":"12","hashOfConfig":"8"},{"size":448,"mtime":1619484841782,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1l1sn51",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/media/rafael/Hard Disk2/workspace/clonenetflix/src/index.js",[],["31","32"],"/media/rafael/Hard Disk2/workspace/clonenetflix/src/App.js",["33"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  /*Quando a página for carregada, ela irá executar está função */\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect( () =>{\n    const loadAll = async () =>{\n      // Pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen =originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      console.log(chosenInfo);\n      setFeaturedData(chosenInfo);\n    }\n    loadAll();\n  }, [])\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      } else{\n        setBlackHeader(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n\n    return () =>{\n      window.removeEventListener('scroll',scrollListener)\n    }\n  },[]);\n\n  return(\n    <div className=\"page\">\n      \n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item,key)=>(\n        <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\">❤️</span> por Rafael Moreira<br/>\n        Direitos de imagem para Netflix<br/>\n        Dados pegos do site Themoviedb.com\n      </footer>\n      {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n      </div>\n      }\n    </div>\n  );\n}","/media/rafael/Hard Disk2/workspace/clonenetflix/src/Tmdb.js",["34","35"],"const API_KEY = 'f2d93d773333142b048db3523e54f38e';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n\nconst basicFetch = async (endpoint) =>{\n    return (await fetch(`${API_BASE}${endpoint}`)).json();\n}\n\nexport default {\n     getHomeList : async () =>{\n        return [\n            {\n                slug: 'originals',\n                title : \"Originais do Netflix\",\n                items : await basicFetch(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title : \"Recomendados para Você\",\n                items : await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title : \"Em Alta\",\n                items : await basicFetch(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title : \"Ação\",\n                items : await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title : \"Comédia\",\n                items : await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title : \"Terror\",\n                items : await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title : \"Romance\",\n                items : await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },            \n            {\n                slug: 'documentary',\n                title : \"Documentários\",\n                items : await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ]\n      },\n      getMovieInfo: async (movieId, type ) =>{\n        let info = {};\n        switch(type){\n            case 'movie':\n                info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n            break;\n            case 'tv':\n                info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n            break;\n\n        }\n        return info;\n      }\n    }","/media/rafael/Hard Disk2/workspace/clonenetflix/src/components/MovieRow.js",["36","37"],"import React, {useState} from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n\n  const [scrollX, setScrollX]= useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if(x > 0){\n        x = 0;\n    }\n    setScrollX(x);\n}\nconst handleRightArrow = () =>{\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if(window.innerWidth - listW > x)\n    {\n        x = (window.innerWidth - listW) - 60;\n    }\n    setScrollX(x);\n}\n\n  return(\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{fontSize: 50}}/>\n      </div>\n      <div className=\"movieRow--right\"onClick={handleRightArrow}>\n        <NavigateNextIcon style={{fontSize: 50}}/>\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{\n            marginLeft: scrollX,\n            width: items.results.length * 150\n        }}>\n        {items.results.length > 0 && items. results.map((item,key)=>(\n        <div key={key}className=\"movieRow--item\">\n           <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}alt={item.original_title}/>\n        </div>\n        ))}\n        </div>\n      </div>\n    </div>\n  );\n}","/media/rafael/Hard Disk2/workspace/clonenetflix/src/components/FeaturedMovie.js",["38"],"/media/rafael/Hard Disk2/workspace/clonenetflix/src/components/Header/index.js",["39","40","41"],"import React from 'react';\nimport './Header.css';\n\nexport default ({black}) =>{\n  return (\n    <header className={black ? 'black' : ''}>\n      <div className=\"header--logo\">\n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0c/Netflix_2014_logo.svg\"/>\n      </div>\n      <div className=\"header--user\">\n        <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"/>\n     </div>\n    </header>\n  );\n}",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":1,"nodeType":"48","endLine":74,"endColumn":2},{"ruleId":"46","severity":1,"message":"49","line":9,"column":1,"nodeType":"48","endLine":67,"endColumn":6},{"ruleId":"50","severity":1,"message":"51","line":56,"column":9,"nodeType":"52","messageId":"53","endLine":64,"endColumn":10},{"ruleId":"46","severity":1,"message":"47","line":6,"column":1,"nodeType":"48","endLine":50,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":41,"column":38,"nodeType":"56","messageId":"57","endLine":41,"endColumn":52,"fix":"58"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":1,"nodeType":"48","endLine":42,"endColumn":2},{"ruleId":"46","severity":1,"message":"47","line":4,"column":1,"nodeType":"48","endLine":15,"endColumn":2},{"ruleId":"59","severity":1,"message":"60","line":8,"column":7,"nodeType":"61","endLine":8,"endColumn":93},{"ruleId":"59","severity":1,"message":"60","line":11,"column":9,"nodeType":"61","endLine":11,"endColumn":99},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-whitespace-before-property","Unexpected whitespace before property results.","MemberExpression","unexpectedWhitespace",{"range":"64","text":"65"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1232,1234],"."]